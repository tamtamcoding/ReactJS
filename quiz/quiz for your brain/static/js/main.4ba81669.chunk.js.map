{"version":3,"sources":["context.js","SetupForm.js","Loading.js","Modal.js","App.js","index.js"],"names":["table","sports","history","politics","generalknowledge","animal","celebrities","geography","vehicles","AppContext","React","createContext","AppProvider","children","useState","waiting","setWaiting","loading","setLoading","questions","setQuestions","index","setIndex","correct","setCorrect","error","setError","amount","category","difficulty","quiz","setQuiz","isModalOpen","setIsMOdalOpen","fetchQuestions","url","a","axios","catch","err","console","log","response","data","results","length","nextQuestion","oldIndex","openModal","Provider","value","checkAnswer","oldState","closeModal","handleChange","e","name","target","handleSubmit","preventDefault","useGlobalContext","useContext","SetupForm","className","htmlFor","type","id","onChange","min","max","onClick","Loading","Modal","percentage","toFixed","App","question","incorrect_answers","correct_answer","answers","tempIndex","Math","floor","random","push","dangerouslySetInnerHTML","__html","map","answer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba81669.chunk.js","sourcesContent":["import axios from 'axios'\nimport React, { useState, useContext, useEffect } from 'react'\n\nconst table = {\n  sports: 21,\n  history: 23,\n  politics: 24,\n  generalknowledge: 9,\n  animal : 27,\n  celebrities: 26,\n  geography: 22, \n  vehicles : 28,\n\n\n}\n\nconst API_ENDPOINT = 'https://opentdb.com/api.php?'\n\nconst url = ''\nconst tempUrl = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple'\n\nconst AppContext = React.createContext()\n\nconst AppProvider = ({ children }) => {\n  const [waiting, setWaiting] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [questions, setQuestions] = useState([])\n  const [index, setIndex] = useState(0)\n  const [correct, setCorrect] = useState(0)\n  const [error, setError] = useState(false)\n  const [quiz, setQuiz] = useState({\n    amount:10,\n    category:'sports',\n    difficulty:'easy',\n\n  })\n  const [isModalOpen, setIsMOdalOpen] = useState(false)\n\n\n\n  const fetchQuestions = async (url) =>{\n    setLoading(true)\n    setWaiting(false)\n    const response = await axios(url).catch((err) => console.log(err))\n    if(response){\n      const data = response.data.results\n      if(data.length > 0){\n        setQuestions(data)\n        setLoading(false)\n        setWaiting(false)\n        setError(false)\n      }\n      else{\n        setWaiting(true)\n        setError(true)\n\n      }\n    }else{\n      setWaiting(true)\n    }\n  }\n  const nextQuestion = () =>{\n    setIndex((oldIndex) =>{\n      const index = oldIndex + 1\n      if(index > questions.length - 1){\n        openModal()\n        return 0\n      }\n      else{\n        \n        return index\n      }\n\n    })\n  }\n  const checkAnswer = (value) =>{\n    if(value){\n      setCorrect((oldState) => oldState + 1)\n    }\n    nextQuestion()\n  }\n  const openModal = () =>{\n    setIsMOdalOpen(true)\n  }\n  const closeModal = () =>{\n    setIsMOdalOpen(false)\n    setWaiting(true)\n    setCorrect(0)\n  }\n\n  const handleChange = (e) =>{\n    const name = e.target.name \n    const value = e.target.value \n    setQuiz({...quiz, [name]:value})\n  }\n  const handleSubmit= (e) =>{\n    e.preventDefault()\n    const {amount, category, difficulty} =quiz\n    // const tempUrl = 'https://opentdb.com/api.php?amount=10&category=21&difficulty=easy&type=multiple'\n    const url = `${API_ENDPOINT}amount=${amount}&difficulty=${difficulty}&category=${table[category]}&type=multiple`\n    fetchQuestions(url)\n  }\n\n\n  return <AppContext.Provider value={{\n    waiting, loading, questions, index, correct, error, isModalOpen, nextQuestion, checkAnswer, closeModal, quiz, handleChange, handleSubmit, \n\n  }}>{children}</AppContext.Provider>\n}\n// make sure use\nexport const useGlobalContext = () => {\n  return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider }\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst SetupForm = () => {\n  const {quiz, handleChange, handleSubmit, error} = useGlobalContext()\n  return <main>\n    <section className=\"quiz quiz-small\">\n      <form  className=\"setup-form\">\n        <h3>its time for you to test your brain power</h3>\n        {/* amount */}\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">number of questions</label>\n          <input type=\"number\" name='amount' id = 'amount' value={quiz.amount} onChange={handleChange} className='form-input' min={1} max={50}/>\n        </div>\n        {/* category */}\n        <div className=\"form-control\">\n          <label htmlFor=\"category\"> category</label>\n          <select name=\"category\" id=\"category\"className='form-input' value={quiz.category} onChange={handleChange}>\n            <option value=\"sports\">sports</option>\n            <option value=\"history\">history</option>\n            <option value=\"politics\">politics</option>\n            <option value=\"generalknowledge\">general knowledge</option>\n            <option value=\"animal\">animal</option>\n            <option value=\"celebrities\">celebrities</option>\n            <option value=\"vehicles\">vehicles</option>\n            <option value=\"geography\">geography</option>\n            \n          </select>\n        </div>\n        {/* difficulty */}\n        <div className=\"form-control\">\n          <label htmlFor=\"difficulty\"> select difficulty</label>\n          <select name=\"difficulty\" id=\"difficulty\"className='form-input' value={quiz.difficulty} onChange={handleChange}>\n            <option value=\"easy\">easy</option>\n            <option value=\"medium\">medium</option>\n            <option value=\"hard\">hard</option>\n            \n          </select>\n        </div>\n        {error && (<p className='error'>cant generate question, please try different options</p>)}\n        <button type='submit' onClick={handleSubmit} className='submit-btn'>start</button>\n      </form>\n    </section>\n  </main>\n}\n\nexport default SetupForm\n","import React from 'react'\n\nconst Loading = () => {\n  return (\n    <main>\n      <div className='loading'></div>\n    </main>\n  )\n}\n\nexport default Loading\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nconst Modal = () => {\n  const {isModalOpen, closeModal, correct, questions} = useGlobalContext()\n  const percentage = ((correct / questions.length)* 100).toFixed(0)\n  const hello = () =>{\n    if(percentage <=70){\n      return <p>dude, maybe you should try reading more books</p>\n    }\n    else{\n      return <p>dude you know nobody like, nobody like a show off</p>\n    }\n  }\n\n  return <div className={`${isModalOpen ? 'modal-container isOpen': 'modal-container'}`}>\n    <div className=\"modal-content\">\n      <h2>\n        you finished the quiz!\n      </h2>\n      <p>you answered {percentage}% of questions correctly</p>\n      {hello()}\n      \n     \n      <button className=\"close-btn\" onClick={closeModal}>\n        play again\n      </button>\n    </div>\n  </div>\n  \n}\n\nexport default Modal\n","import React from 'react'\nimport { useGlobalContext } from './context'\n\nimport SetupForm from './SetupForm'\nimport Loading from './Loading'\nimport Modal from './Modal'\nfunction App() {\n  const {waiting, loading, questions, index, correct, nextQuestion, checkAnswer} = useGlobalContext()\n  if(waiting){\n    return <SetupForm/>\n  }\n  if(loading){\n    return <Loading/>\n  }\n  console.log(questions);\n  const {question, incorrect_answers, correct_answer} =questions[index]\n  // const answers = [...incorrect_answers, correct_answer]\n  let answers = [...incorrect_answers]\n  const tempIndex = Math.floor(Math.random() * 4)\n  if(tempIndex === 3){\n    answers.push(correct_answer)\n  }\n  else{\n    answers.push(answers[tempIndex])\n    answers[tempIndex] =correct_answer\n  }\n\n\n  return <main>\n    <Modal/>\n    <section className=\"quiz\">\n      <p className=\"correct-answers\">\n        correct answers : {correct} / {index}\n      </p>\n      <article className=\"container\">\n        <h2 dangerouslySetInnerHTML = {{__html:question}}/>\n        <div className=\"btn-container\">\n          {answers.map((answer, index) =>{\n            return <button className='answer-btn' onClick={() =>checkAnswer(correct_answer === answer)} key={index} dangerouslySetInnerHTML = {{__html:answer}}/>\n          })}\n        </div>\n      </article>\n      <button className=\"next-question\" onClick={nextQuestion}>\n        next question\n      </button>\n    </section>\n  </main>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { AppProvider } from './context'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}